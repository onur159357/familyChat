{\rtf1\ansi\ansicpg1254\cocoartf1561\cocoasubrtf600
{\fonttbl\f0\fswiss\fcharset0 Helvetica;\f1\fmodern\fcharset0 Courier;\f2\fnil\fcharset0 Menlo-Regular;
}
{\colortbl;\red255\green255\blue255;\red0\green0\blue0;\red245\green245\blue245;\red0\green0\blue255;
\red255\green255\blue255;\red0\green0\blue109;\red101\green76\blue29;\red144\green1\blue18;\red15\green112\blue1;
\red157\green0\blue210;\red15\green112\blue1;\red32\green108\blue135;\red19\green120\blue72;}
{\*\expandedcolortbl;;\cssrgb\c0\c0\c0;\cssrgb\c96863\c96863\c96863;\cssrgb\c0\c0\c100000;
\cssrgb\c100000\c100000\c100000;\cssrgb\c0\c6275\c50196;\cssrgb\c47451\c36863\c14902;\cssrgb\c63922\c8235\c8235;\cssrgb\c0\c50196\c0;
\cssrgb\c68627\c0\c85882;\cssrgb\c0\c50196\c0;\cssrgb\c14902\c49804\c60000;\cssrgb\c3529\c53333\c35294;}
\paperw11900\paperh16840\margl1440\margr1440\vieww22100\viewh12480\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\fs24 \cf0 JWT\
\
\pard\pardeftab720\sl360\partightenfactor0

\f1\fs28 \cf2 \cb3 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 npm\'a0install\'a0jsonwebtoken \'97save\
\
\pard\pardeftab720\sl360\partightenfactor0

\f2\fs24 \cf4 \cb5 \strokec4 const\cf2 \strokec2  \cf6 \strokec6 jwt\cf2 \strokec2  = \cf7 \strokec7 require\cf2 \strokec2 (\cf8 \strokec8 'jsonwebtoken'\cf2 \strokec2 );\cb1 \
\
\pard\pardeftab720\sl360\partightenfactor0
\cf6 \cb5 \strokec6 router\cf2 \strokec2 .\cf7 \strokec7 post\cf2 \strokec2 (\cf8 \strokec8 '/login'\cf2 \strokec2 , (\cf6 \strokec6 req\cf2 \strokec2 , \cf6 \strokec6 res\cf2 \strokec2 , \cf6 \strokec6 next\cf2 \strokec2 ) \cf4 \strokec4 =>\cf2 \strokec2  \{\cb1 \
\pard\pardeftab720\sl360\partightenfactor0
\cf2 \cb5   \cf4 \strokec4 const\cf2 \strokec2  \{\cf6 \strokec6 userName\cf2 \strokec2 , \cf6 \strokec6 password\cf2 \strokec2 \} = \cf6 \strokec6 req\cf2 \strokec2 .\cf6 \strokec6 body\cf2 \strokec2 ;\cb1 \
\cb5   \cf9 \cb5 \outl0\strokewidth0 //Giri\uc0\u351  yapan kullan\u305 c\u305  veri taban\u305 nda varm\u305  diye bak\u305 yoruz\cf2 \cb1 \outl0\strokewidth0 \strokec2 \
\cb5   \cf6 \strokec6 UserSchema\cf2 \strokec2 .\cf7 \strokec7 findOne\cf2 \strokec2 (\{\cf6 \strokec6 userName\cf2 \strokec2 \}, (\cf6 \strokec6 error\cf2 \strokec2 , \cf6 \strokec6 user\cf2 \strokec2 ) \cf4 \strokec4 =>\cf2 \strokec2  \{\cb1 \
\cb5     \cf10 \strokec10 if\cf2 \strokec2 (\cf6 \strokec6 error\cf2 \strokec2 )\cb1 \
\cb5       \cf10 \strokec10 throw\cf2 \strokec2  \cf6 \strokec6 error\cf2 \strokec2 ;\cb1 \
\
\cb5     \cf10 \strokec10 if\cf2 \strokec2 (!\cf6 \strokec6 user\cf2 \strokec2 ) \{\
	\cf9 \cb5 \outl0\strokewidth0 //Kay\uc0\u305 tl\u305  kullan\u305 c\u305  yoksa hata d\'f6n\'fcyoruz\cf2 \cb1 \outl0\strokewidth0 \strokec2 \
\cb5       \cf6 \strokec6 res\cf2 \strokec2 .\cf7 \strokec7 render\cf2 \strokec2 (\cf8 \strokec8 'login'\cf2 \strokec2 ,\{\cb1 \
\cb5         \cf6 \strokec6 status :\cf2 \strokec2  \cf4 \strokec4 false\cf2 \strokec2 ,\cb1 \
\cb5         \cf6 \strokec6 errorMessage :\cf2 \strokec2  \cf8 \strokec8 'Kullan\uc0\u305 c\u305  ad\u305 na kay\u305 tl\u305  kullan\u305 c\u305  yok'\cf2 \strokec2 ,\cb1 \
\
\cb5       \})\cb1 \
\
\cb5     \}\cf10 \strokec10 else\cf2 \strokec2 \{\
	 \cf9 \cb5 \outl0\strokewidth0 //K\uc0\u305 y\u305 tl\u305  kullan\u305 c\u305  varsa \u351 ifresi do\u287 rumu diye bak\u305 yoruz\cf2 \cb1 \outl0\strokewidth0 \strokec2 \
\cb5       \cf11 \strokec11 //bcrypt ile \uc0\u351 ifreyi \'e7\'f6z\'fcp kar\u351 \u305 la\u351 t\u305 r\u305 yoruz\cf2 \cb1 \strokec2 \
\cb5       \cf11 \strokec11 //password = kullan\uc0\u305 c\u305 n\u305 n girdi\u287 i \u351 ifre\cf2 \cb1 \strokec2 \
\cb5       \cf11 \strokec11 //user.password = db de kay\uc0\u305 tl\u305  olan \u351 ifre\cf2 \cb1 \strokec2 \
\cb5       \cf11 \strokec11 //iki password uyu\uc0\u351 uyorsa result true uyu\u351 muyorsa false d\'f6ner\cf2 \cb1 \strokec2 \
\cb5       \cf6 \strokec6 bcrypt\cf2 \strokec2 .\cf7 \strokec7 compare\cf2 \strokec2 (\cf6 \strokec6 password\cf2 \strokec2 , \cf6 \strokec6 user\cf2 \strokec2 .\cf6 \strokec6 password\cf2 \strokec2 ).\cf7 \strokec7 then\cf2 \strokec2 ( (\cf6 \strokec6 result\cf2 \strokec2 ) \cf4 \strokec4 =>\cf2 \strokec2  \{\
		\cf9 \cb5 \outl0\strokewidth0 //\uc0\u350 ifre yanl\u305 \u351 sa result false d\'f6ner\cf2 \cb1 \outl0\strokewidth0 \strokec2 \
\cb5           \cf10 \strokec10 if\cf2 \strokec2 (!\cf6 \strokec6 result\cf2 \strokec2 ) \{\cb1 \
\cb5             \cf6 \strokec6 res\cf2 \strokec2 .\cf7 \strokec7 render\cf2 \strokec2 (\cf8 \strokec8 'login'\cf2 \strokec2 ,\{\cb1 \
\cb5               \cf6 \strokec6 status :\cf2 \strokec2  \cf4 \strokec4 false\cf2 \strokec2 ,\cb1 \
\cb5               \cf6 \strokec6 errorMessage :\cf2 \strokec2  \cf8 \strokec8 'Girilen \uc0\u351 ifre yanl\u305 \u351 '\cf2 \cb1 \strokec2 \
\cb5             \cb1 \
\cb5             \})\cb1 \
\cb5           \cb1 \
\cb5           \} \cf10 \strokec10 else\cf2 \strokec2  \{\
		  \cf9 \cb5 \outl0\strokewidth0 //\uc0\u350 ifre do\u287 ruysa payload olu\u351 turuyoruz okunabilir veri\cf2 \cb1 \outl0\strokewidth0 \strokec2 \
\cb5             \cf4 \strokec4 const\cf2 \strokec2  \cf6 \strokec6 payload\cf2 \strokec2  = \{\cb1 \
\cb5               \cf6 \strokec6 userName\cf2 \cb1 \strokec2 \
\
\cb5             \};\cb1 \
\cb5             \cf11 \strokec11 //JWT i\'e7in ayarlar\uc0\u305 m\u305 z\u305  yap\u305 yoruz\
		  /////////// Di\uc0\u287 er dosyalara ekleme\
			Ana dizinde config.js a\'e7\uc0\u305 yoruz i\'e7erisinde api_secret_key i olu\u351 turuyoruz.\
		     \cf12 \strokec12 module\cf2 \strokec2 .\cf12 \strokec12 exports\cf2 \strokec2  = \{\cb1 \
\pard\pardeftab720\sl360\partightenfactor0
\cf2 \cb5     			    \cf6 \strokec6 api_secret_key :\cf2 \strokec2  \cf8 \strokec8 '\'e7ok gizli anahtar'\cf2 \strokec2 ,\cb1 \
\cb5 		      \};\
		  \cf9 \cb5 \outl0\strokewidth0 //app.js i\'e7erisinde olu\uc0\u351 turdu\u287 umuz mod\'fcl\'fc ekliyoruz\cf2 \cb1 \outl0\strokewidth0 \strokec2 \
\pard\pardeftab720\sl360\partightenfactor0
\cf4 \cb5 \strokec4 			const\cf2 \strokec2  \cf6 \strokec6 config\cf2 \strokec2  = \cf7 \strokec7 require\cf2 \strokec2 (\cf8 \strokec8 './config'\cf2 \strokec2 );\
		  \cf9 \cb5 \outl0\strokewidth0 //api_secret_key I global olarak kullanmak i\'e7in atama yap\uc0\u305 yoruz\cf2 \cb1 \outl0\strokewidth0 \strokec2 \
\pard\pardeftab720\sl360\partightenfactor0
\cf6 \cb5 \strokec6 			app\cf2 \strokec2 .\cf7 \strokec7 set\cf2 \strokec2 (\cf8 \strokec8 'api_secret_key'\cf2 \strokec2 , \cf6 \strokec6 config\cf2 \strokec2 .\cf6 \strokec6 api_secret_key\cf2 \strokec2 );\cb1 \
\
\pard\pardeftab720\sl360\partightenfactor0
\cf9 \cb5 \outl0\strokewidth0 		  ////////////\
\
		  //jwt kullanarak token olu\uc0\u351 turuyoruz \
		  //1 parametre de payload(y\'fck, bu veri okunabilir, kullan\uc0\u305 c\u305  ad\u305  vs.).\
		  //2 parametre de global olarak kullanmak i\'e7in olu\uc0\u351 turdu\u287 umuz \cf9 \cb5 api_secret_key\cf9 \cb5  i \'e7a\uc0\u287 \u305 r\u305 yoruz,\
	 	  //3 parametre de expiresIn ile olu\uc0\u351 turdu\u287 umuz token \u305 n ge\'e7erlilik s\'fcresini belirliyoruz\cf2 \cb1 \outl0\strokewidth0 \strokec2 \
\pard\pardeftab720\sl360\partightenfactor0
\cf2 \cb5             \cf4 \strokec4 const\cf2 \strokec2  \cf6 \strokec6 token\cf2 \strokec2  = \cf6 \strokec6 jwt\cf2 \strokec2 .\cf7 \strokec7 sign\cf2 \strokec2 (\cf6 \strokec6 payload\cf2 \strokec2 , \cf6 \strokec6 req\cf2 \strokec2 .\cf6 \strokec6 app\cf2 \strokec2 .\cf7 \strokec7 get\cf2 \strokec2 (\cf8 \strokec8 'api_secret_key'\cf2 \strokec2 ), \{ \cb1 \
\cb5               \cf6 \strokec6 expiresIn :\cf2 \strokec2  \cf13 \strokec13 3600\cf2 \strokec2 , \cf11 \strokec11 //saniye t\'fcr\'fcnden. 1 saat ge\'e7erli\cf2 \cb1 \strokec2 \
\
\cb5             \});\
\
		  \cf9 \cb5 \outl0\strokewidth0 //Olu\uc0\u351 turdu\u287 umuz token \u305  art\u305 k kullanabiliriz.\cf2 \cb1 \outl0\strokewidth0 \strokec2 \
\cb5             \cf6 \strokec6 res\cf2 \strokec2 .\cf7 \strokec7 redirect\cf2 \strokec2 (\cf8 \strokec8 `http://localhost:3000/chat?token=\cf4 \strokec4 $\{\cf6 \strokec6 token\cf4 \strokec4 \}\cf8 \strokec8 `\cf2 \strokec2 );\cb1 \
\cb5             \cf11 \strokec11 // res.json(\{\cf2 \cb1 \strokec2 \
\cb5             \cf11 \strokec11 //   status : true,\cf2 \cb1 \strokec2 \
\cb5             \cf11 \strokec11 //   token,\cf2 \cb1 \strokec2 \
\
\cb5             \cf11 \strokec11 // \})\cf2 \cb1 \strokec2 \
\cb5           \}\cb1 \
\
\cb5       \});\cb1 \
\
\cb5     \}\cb1 \
\
\cb5   \})\
\
\pard\pardeftab720\sl360\partightenfactor0
\cf9 \cb5 \outl0\strokewidth0 ////////////MIDDLEWARE (arakatman)\
Token \uc0\u305 n var olup olmad\u305 \u287 \u305 na, verify(do\u287 rulay\u305 n) olup olmad\u305 \u287 \u305 na inceleyecek\
Ana dizine middleware diye bir klas\'f6r olu\uc0\u351 turup i\'e7erisine verify-token.js isimli bir dosya a\'e7\u305 yoruz\
\
\
\pard\pardeftab720\sl360\partightenfactor0
\cf4 \cb5 \outl0\strokewidth0 \strokec4 const\cf2 \strokec2  \cf6 \strokec6 jwt\cf2 \strokec2  = \cf7 \strokec7 require\cf2 \strokec2 (\cf8 \strokec8 'jsonwebtoken'\cf2 \strokec2 );\cb1 \
\
\cf11 \cb5 \strokec11 //model \'e7\uc0\u305 k\u305 \u351  yapm\u305 \u351  olan token i\'e7in db\cf2 \cb1 \strokec2 \
\cf4 \cb5 \strokec4 const\cf2 \strokec2  \cf6 \strokec6 TokenSecuritySchema\cf2 \strokec2  = \cf7 \strokec7 require\cf2 \strokec2 (\cf8 \strokec8 '../model/Token-security'\cf2 \strokec2 );\cb1 \
\
\pard\pardeftab720\sl360\partightenfactor0
\cf12 \cb5 \strokec12 module\cf2 \strokec2 .\cf12 \strokec12 exports\cf2 \strokec2  = (\cf6 \strokec6 req\cf2 \strokec2 , \cf6 \strokec6 res\cf2 \strokec2 , \cf6 \strokec6 next\cf2 \strokec2 ) \cf4 \strokec4 =>\cf2 \strokec2  \{\
    \cf9 \cb5 \outl0\strokewidth0 //Token \uc0\u305  yakal\u305 yoruz\cf2 \cb1 \outl0\strokewidth0 \strokec2 \
\pard\pardeftab720\sl360\partightenfactor0
\cf2 \cb5     \cf11 \strokec11 //token a\uc0\u351 a\u287 \u305 daki 3 \u351 ekilde gelebilir \cf2 \cb1 \strokec2 \
\cb5     \cf11 \strokec11 //query = localhost:3000/api/movies?token=dqwdq  \
	// urldeki token query ile yakalana bilir\cf2 \cb1 \strokec2 \
\cb5     \cf4 \strokec4 const\cf2 \strokec2  \cf6 \strokec6 token\cf2 \strokec2  = \cf6 \strokec6 req\cf2 \strokec2 .\cf6 \strokec6 headers\cf2 \strokec2 [\cf8 \strokec8 'x-access-token'\cf2 \strokec2 ] || \cf6 \strokec6 req\cf2 \strokec2 .\cf6 \strokec6 body\cf2 \strokec2 .\cf6 \strokec6 token\cf2 \strokec2  || \cf6 \strokec6 req\cf2 \strokec2 .\cf6 \strokec6 query\cf2 \strokec2 .\cf6 \strokec6 token\cf2 \strokec2 ;\cb1 \
\cb5     \cb1 \
\cb5     \cf11 \strokec11 //iptal edi\uc0\u351 mi\u351  token kontrol\'fc i\'e7in db ye bak\u305 yoruz\cf2 \cb1 \strokec2 \
\cb5     \cf4 \strokec4 function\cf2 \strokec2  \cf7 \strokec7 canceledToken\cf2 \strokec2 () \{\cb1 \
\cb5         \cf10 \strokec10 return\cf2 \strokec2  \cf4 \strokec4 new\cf2 \strokec2  \cf12 \strokec12 Promise\cf2 \strokec2 ((\cf6 \strokec6 resolve\cf2 \strokec2 , \cf6 \strokec6 reject\cf2 \strokec2 ) \cf4 \strokec4 =>\cf2 \strokec2  \{\cb1 \
\cb5             \cf6 \strokec6 TokenSecuritySchema\cf2 \strokec2 .\cf7 \strokec7 findOne\cf2 \strokec2 (\{ \cf8 \strokec8 'token'\cf6 \strokec6  :\cf2 \strokec2  \cf6 \strokec6 token\cf2 \strokec2  \}, (\cf6 \strokec6 error\cf2 \strokec2 , \cf6 \strokec6 data\cf2 \strokec2 ) \cf4 \strokec4 =>\cf2 \strokec2  \{\cb1 \
\cb5                 \cf10 \strokec10 if\cf2 \strokec2 (\cf6 \strokec6 error\cf2 \strokec2 )\cb1 \
\cb5                     \cf12 \strokec12 console\cf2 \strokec2 .\cf7 \strokec7 log\cf2 \strokec2 (\cf6 \strokec6 error\cf2 \strokec2 )\cb1 \
\cb5         \cb1 \
\cb5                  \cf10 \strokec10 if\cf2 \strokec2 (\cf6 \strokec6 data\cf2 \strokec2  !== \cf4 \strokec4 null\cf2 \strokec2 ) \{\cb1 \
\cb5                      \cf7 \strokec7 resolve\cf2 \strokec2 (\cf4 \strokec4 false\cf2 \strokec2 );\cb1 \
\
\cb5                  \} \cf10 \strokec10 else\cf2 \strokec2  \{\cb1 \
\cb5                      \cf7 \strokec7 resolve\cf2 \strokec2 (\cf4 \strokec4 true\cf2 \strokec2 );\cb1 \
\
\cb5                  \}\cb1 \
\cb5         \cb1 \
\cb5             \});\cb1 \
\cb5         \})\cb1 \
\cb5     \}\cb1 \
\
\cb5     \cf7 \strokec7 canceledToken\cf2 \strokec2 ().\cf7 \strokec7 then\cf2 \strokec2 ((\cf6 \strokec6 data\cf2 \strokec2 ) \cf4 \strokec4 =>\cf2 \strokec2  \{\cb1 \
\cb5         \cf10 \strokec10 if\cf2 \strokec2 (\cf6 \strokec6 token\cf2 \strokec2 )\{\cb1 \
\cb5             \cf11 \strokec11 //iptal edilmi\uc0\u351  token varm\u305  diye kontrol ediyoruz\cf2 \cb1 \strokec2 \
\cb5             \cf10 \strokec10 if\cf2 \strokec2 (\cf6 \strokec6 data\cf2 \strokec2 ) \{\cb1 \
\cb5                 \cf11 \strokec11 //token \uc0\u305  verify (do\u287 ruluyoruz) ediyoruz\cf2 \cb1 \strokec2 \
\cb5                 \cf6 \strokec6 jwt\cf2 \strokec2 .\cf7 \strokec7 verify\cf2 \strokec2 (\cf6 \strokec6 token\cf2 \strokec2 , \cf6 \strokec6 req\cf2 \strokec2 .\cf6 \strokec6 app\cf2 \strokec2 .\cf7 \strokec7 get\cf2 \strokec2 (\cf8 \strokec8 'api_secret_key'\cf2 \strokec2 ), (\cf6 \strokec6 error\cf2 \strokec2 , \cf6 \strokec6 decoded\cf2 \strokec2 ) \cf4 \strokec4 =>\cf2 \strokec2  \{\cb1 \
\cb5         \cb1 \
\cb5                     \cf10 \strokec10 if\cf2 \strokec2 (\cf6 \strokec6 error\cf2 \strokec2 ) \{\cb1 \
\cb5                         \cf6 \strokec6 res\cf2 \strokec2 .\cf7 \strokec7 json\cf2 \strokec2 (\{\cb1 \
\cb5                             \cf6 \strokec6 status:\cf4 \strokec4 false\cf2 \strokec2 ,\cb1 \
\cb5                             \cf6 \strokec6 message:\cf8 \strokec8 'authenticate (kimlik do\uc0\u287 rulamas\u305  hatas\u305 )'\cf2 \cb1 \strokec2 \
\cb5         \cb1 \
\cb5                         \})\cb1 \
\cb5         \cb1 \
\cb5                     \}\cf10 \strokec10 else\cf2 \strokec2 \{\cb1 \
\cb5                         \cf11 \strokec11 //payload k\uc0\u305 sm\u305 n\u305  burada al\u305 yoruz\cf2 \cb1 \strokec2 \
\cb5                         \cf6 \strokec6 req\cf2 \strokec2 .\cf6 \strokec6 decode\cf2 \strokec2  = \cf6 \strokec6 decoded\cf2 \strokec2 ;\cb1 \
\cb5                         \cf7 \strokec7 next\cf2 \strokec2 (); \cf11 \strokec11 //Her\uc0\u351 ey yolunda herhangi bir router ile e\u351 le\u351 ebilir\cf2 \cb1 \strokec2 \
\cb5                         \cb1 \
\cb5                     \}\cb1 \
\cb5         \cb1 \
\cb5                 \})\cb1 \
\cb5             \} \cf10 \strokec10 else\cf2 \strokec2  \{\cb1 \
\cb5                 \cf6 \strokec6 res\cf2 \strokec2 .\cf7 \strokec7 render\cf2 \strokec2 (\cf8 \strokec8 'error'\cf2 \strokec2 , \{\cb1 \
\cb5                     \cf6 \strokec6 status:\cf4 \strokec4 false\cf2 \strokec2 ,\cb1 \
\cb5                     \cf6 \strokec6 message:\cf8 \strokec8 'iptal edilmi\uc0\u351  token kullan\u305 yorsunuz'\cf2 \cb1 \strokec2 \
\
\cb5                 \})\cb1 \
\cb5             \}\cb1 \
\cb5     \cb1 \
\cb5         \} \cf10 \strokec10 else\cf2 \strokec2  \{\cb1 \
\cb5             \cf6 \strokec6 res\cf2 \strokec2 .\cf7 \strokec7 json\cf2 \strokec2 (\{\cb1 \
\cb5                 \cf6 \strokec6 status:\cf4 \strokec4 false\cf2 \strokec2 ,\cb1 \
\cb5                 \cf6 \strokec6 message:\cf2 \strokec2  \cf8 \strokec8 'Herhangibir token olu\uc0\u351 turmad\u305 n\u305 z'\cf2 \cb1 \strokec2 \
\cb5     \cb1 \
\cb5             \})\cb1 \
\cb5     \cb1 \
\cb5         \}\cb1 \
\
\cb5     \}).\cf7 \strokec7 catch\cf2 \strokec2 ((\cf6 \strokec6 err\cf2 \strokec2 ) \cf4 \strokec4 =>\cf2 \strokec2  \{\cb1 \
\cb5         \cf12 \strokec12 console\cf2 \strokec2 .\cf7 \strokec7 log\cf2 \strokec2 (\cf6 \strokec6 err\cf2 \strokec2 );\cb1 \
\
\cb5     \})\cb1 \
\
\cb5     \cb1 \
\
\cb5 \};\cb1 \
\pard\pardeftab720\sl360\partightenfactor0
\cf9 \cb5 \outl0\strokewidth0 \
\pard\pardeftab720\sl360\partightenfactor0
\cf2 \cb1 \outl0\strokewidth0 \strokec2 \
}